//
// build.gradle in TeamCode
//
// Most of the definitions for building your module reside in a common, shared
// file 'build.common.gradle'. Being factored in this way makes it easier to
// integrate updates to the FTC into your code. If you really need to customize
// the build definitions, you can place those customizations in this file, but
// please think carefully as to whether such customizations are really necessary
// before doing so.


// Custom definitions may go here

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://repo.dairy.foundation/releases"
        }
    }
    dependencies {
        classpath "dev.frozenmilk:Load:0.2.1"
    }
}

plugins {
    id 'com.diffplug.spotless' version '7.0.4'
}

spotless {
    java {
        googleJavaFormat('1.17.0')
        target 'src/**/*.java'
    }
}

// Include common definitions from above.
apply from: '../build.common.gradle'
apply from: '../build.dependencies.gradle'
apply plugin: 'dev.frozenmilk.sinister.sloth.load'

android {
    namespace = 'org.firstinspires.ftc.teamcode'

    packagingOptions {
        jniLibs.useLegacyPackaging true
    }
}

repositories {
    maven {
        url = "https://repo.dairy.foundation/releases"
    }
}


dependencies {
    implementation project(':FtcRobotController')
    annotationProcessor files('lib/OpModeAnnotationProcessor.jar')

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.7'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.4.21'

    implementation 'org.ftclib.ftclib:core:2.1.1' // core

    testImplementation 'junit:junit:4.13.2'

    implementation("dev.frozenmilk.sinister:Sloth:0.2.1")
    implementation("com.acmerobotics.slothboard:dashboard:0.2.1+0.4.16")
}

tasks.named('check') {
    dependsOn 'spotlessCheck'
}
